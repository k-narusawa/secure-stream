version: "3.7"
services:
  hydra:
    image: oryd/hydra:v2.2.0
    ports:
      - "44444:4444" # Public port
      - "4445:4445" # Admin port
      - "5556:5555" # Port for hydra token user
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: bind
        source: ./docker/hydra
        target: /etc/config/hydra
    environment:
      - CORS_DEBUG=true
      - DSN=postgres://root:root@hydra-postgres:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
      # env_file:
      #   - ./docker/hydra.env
    restart: unless-stopped
    depends_on:
      - hydra-migrate
    networks:
      - intranet

  hydra-migrate:
    image: oryd/hydra:v2.2.0
    environment:
      - DSN=postgres://root:root@hydra-postgres:5432/hydra?sslmode=disable&max_conns=20&max_idle_conns=4
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: bind
        source: ./docker/hydra
        target: /etc/config/hydra
    restart: on-failure
    depends_on:
      - hydra-postgres
    networks:
      - intranet

  postgres:
    image: postgres:15.4
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - type: volume
        source: postgres
        target: /var/lib/postgres
      - type: bind
        source: ./docker/postgres/init-db.sh
        target: /docker-entrypoint-initdb.d/init-db.sh
    networks:
      - intranet

  hydra-postgres:
    image: postgres:15.4
    restart: on-failure
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=hydra
    volumes:
      - type: volume
        source: hydra-postgres
        target: /var/lib/postgres
    networks:
      - intranet

networks:
  intranet:

volumes:
  hydra:
  postgres:
  hydra-postgres: